<<<<<<< HEAD
ï»¿<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox4.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAgAAAAIACAYAAAD0eNT6AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        vgAADr4B6kKxwAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAABKzSURBVHhe7d3L
        r7VXXQfwRi5FJl4mBOrEAKVFLLVvBbwXGGJi5B8gToz8Bypxoomo3BJNjBMxaoIOGOlAEgZqosZbEA0D
        Z4IChba0vNAmXNXf6ns23ee86+zz7L2fy/qt9fkk34TSSbPOOfv73c/znH3uAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYA33Rl5653+yhfIF
        uC/yfc//EwDM7xWRX4r8eeQ/I9+I/N9Fvhb5VORPI78Q0UcLeW3klyN/E/ls5H8juy9CSfn/PhJ5d+SV
        EQA41aORj0a+GdnvmkMpg+BPIg9GmMHbI/8YqR32dSlfhA9H3hABgKm+N1L64+qbzGNSRsOHIi+PcILX
        RP4qUjvcqfl25Lci7tUAcJNHIv8VqfXJKSm3B+6PcISfi9yO1A70lHwiUm4hAEDNY5E5e2eXJyJlWDDB
        uyLfitQO8pw8HnkgAgD73hZ5LlLrjjnyxUi5qs0B5Z3/EuW/ixEAwL6ly3+Xf4+8LEJFWUdLXH65GiMA
        gGKt8t/ltyNUnPvA3zEpI8CvaQCMa+3yL/l65NUR9pRf9asd1pIxAgDGtEX57/IHEfYc+3v+c8UIABjL
        WyNblX/JVyM+H+BC+fW82iGtFSMAYAxbl/8u74wQysf71g5ozRgBAH1rpfxLfi9CKJ/tXzugtWMEAPSp
        pfIv+XiE8LlI7YC2SPmwhh+KANCHn4qU++611/ytUj4ieHjlQxHK5/XXDmiruBIA0IfW3vnv8lRkeK+K
        1A5n6xgBALm1Wv4l5e8DDO97IrXDaSFuBwDk1OJl//18MjK8F0XO+ZvLS8cIAMil9fIv+ViE8D+R2gG1
        ErcDAHJo+bL/fj4QIXwkUjuglmIEALQtS/mXvCNCeHekdkCtpdwOeEMEgLZkuOy/yzOReyOEV0a+Fqkd
        VGtxJQCgLY9FsrzzL3l/hD0fjtQOqsV8IWIEAGwvW/k/Gym//s6ecmm9tQ8EOhQjAGBb2cq/5FcjVLw3
        UjuwVuOZAIBtZLrnv8s/RV4SoeKlkU9EagfXasqVgNdHAFhHeedfLqXXXpNbzacjLv3f4LWR8qBd7QBb
        jREAsI6M5V867XURJrg/0tJfCJwStwMAlpXxsn95g+jTZI9kBACw85MR5T8QIwAA5T8oIwBgXMp/cEYA
        wHgyln957Vf+MytPUBoBAGNQ/lxiBAD0T/lTZQQA9Ev5c5ARANAf5c8kRgBAP5Q/RzECAPJT/pzECADI
        S/lzFiMAIB/lzyyMAIA8lD+zMgIA2qf8WYQRANAu5c+ijACA9ih/VmEEALRD+bMqIwBge8qfTRgBANtR
        /mwq6wj44QhAVsqfJmQcAU9EjAAgo1L+X4nUXttajfLvmBEAsDzlT5PKCPh8pPYN0GqMACAL5U/TjACA
        +WUtfw9dD8YIAJiP8icVIwDgfMqflIwAgNMpf1IzAgCOp/zpghEAMJ3ypytGAMDNfiKi/OmOEQBwPeVP
        14wAgLspf4ZgBAC8QPkzFCMAQPkzKCMAGJnyZ2hGADAi5Q/BCABGovxhjxEAjED5Q4URAPRM+cMBRgDQ
        I+UPExgBQE+UPxzBCAB6oPzhBEYAkJnyhzM8EDECgGyUP8zACAAyUf4wIyMAyED5wwKMAKBlyh8WZAQA
        LVL+sAIjAGiJ8ocVGQFAC5Q/bMAIALak/GFDRgCwBeUPDTACgDVlLP/ymqP86ZIRAKwha/l7raFrRgCw
        JOUPDTMCgCUof0jACADmpPwhESMAmIPyh4SMAOAcyh8SyzoCHooA2/nxiPKH5IwA4BjKHzpiBABTKH/o
        UBkBj0dqP0CtxgiA9Sh/6JgRANQofxiAEQDsU/4wkIwj4OnIrQgwH+UPAzICYGzKHwZmBMCYlD9gBMBg
        lD/wHUYAjEH5A3cxAqBvyh+4lhEAfVL+wI2MAOiL8gcmMwKgD8ofOJoRALkpf+BkRgDkpPyBsxkBkIvy
        B2ZjBEAOyh+YnREAbVP+wGKMAGhTKf/bkdrPQKtR/pCMEQBtUf7AaowAaIPyB1b3YMQIgO0of2AzRgBs
        Q/kDmzMCYF3KH2iGEQDrUP5Ac4wAWJbyB5plBMAylD/QvKwj4NEItOjHIsofSMEIgHkofyAdIwDOo/yB
        tIwAOI3yB9IzAuA4Wcv/oQjAJUYATKP8ge4YAXCY8ge6ZQRAnfIHumcEwGXKHxiGEQB3KH9gOOUF5MlI
        7QWm1RgBzClj+ZefAR+dDZwt4wh4JmIEcC7lDwzPCGA0yh/gghHAKJQ/wBVGAL1T/gDXMALolfIHuIER
        QG+UP8BERgC9UP4ARzICyE75A5zICCAr5Q9wJiOAbJQ/wEyMALJQ/gAzMwJonfIHWIgRQKuUP8DC3hgx
        AmhJKdFSprWvfatR/kBKRgCtUP4AKzMC2JryB9iIEcBWlD/AxowA1qb8ARphBLAW5Q/QmKwj4Ecj5KD8
        ARplBLAU5Q/QOCOAuSl/gCSMAOai/AGSMQI4V9by93ApMDwjgFMpf4DkjACOpfwBOmEEMJXyB+iMEcBN
        lD9Ap4wArqP8ATpnBHCV8gcYhBHAjvIHGIwRgPIHGJQRMK6M5V++9sofYCZGwHiUPwDPMwLGofwBuMQI
        6J/yB6DKCOiX8gfgICOgP8ofgEmMgH48ElH+AExmBORXyv9LkdpZtRrlD9AAIyAv5Q/AWcoIeCpSe8Fu
        NaOPAOUPwCwejhgBOSh/AGZlBLRP+QOwCCOgXcofgEUZAe1R/gCswghoh/IHYFVGwPaUPwCbyDoC3hTJ
        TvkDsCkjYH3KH4AmGAHrUf4ANMUIWJ7yB6BJRsByspb/SB/EBDA0I2B+yh+AFIyA+Sh/AFIxAs6n/AFI
        yQg4nfIHIDUj4HjKH4AuGAHTKX8AupJxBHw5suYIUP4AdMkIuJ7yB6BrRsDdlD8AQzACXqD8ARiKEaD8
        ARjUyCNA+QMwtBFHgPIHgDDSCFD+ALBnhBGg/AGgoucR8CMR5Q8A1+hxBCh/AJigpxGg/AHgCD2MAOUP
        ACfIPAKUPwCc4Vbk6UitsFpNKdKS2r9rNeWMy1kDQDMyXgnIFO/8AWiWEbBMlD8AzTMC5o3yByANI2Ce
        KH8A0jECzovyByAtI+C0KH8A0jMCjovyB6AbRsC0KH8AulM+dc8IuD6l/Kf8xUIASMcIqEf5A9A9I+By
        lD8AwzAC7kT5AzCc0UeA8gdgWKOOAOUPwPBGGwHKHwAujDIClD8AXNH7CFD+AHCNMgK+FKkVaOZ8OaL8
        AeCA3kaA8geAiXoZAcofAI6UfQQofwA4UdYRoPwB4AwGAAAMxi0AABiMhwABYDC9lP8uRgAA3KC38t+l
        jIA3RwCAK3ot/12MAAC4ovfy38UIAIALo5T/LkYAAMMbrfx3MQIAGNao5b+LEQDAcEYv/12MAACGofwv
        xwgAoHvKvx4jAIBuKf/DMQIA6I7ynxYjAIBulPJ/KlIrPLk7RgAA6Sn/02IEAJCW8j8vRgAA6Sj/eWIE
        AJCG8p83RgAAzVP+y8QIAKBZyn/ZGAEANOdW5OlIrbhazTMXqf27VlP+e98UAYDNZXznX95NlyIt/+3Z
        PqDIlQAANvdwJGv57xgBAHCEHsp/xwgAgAl6Kv8dIwAADuix/HeyPs9gBACwqJ7Lf8cIAIA9I5T/jhEA
        AGGk8t8xAgAY2ojlv2MEADCkkct/xwgAYCjK/wVGAABDUP53yzoC3hIBgBsp/+sZAQB0SfnfzAgAoCvK
        fzojAIAuKP/jZT0zIwCA5yn/0xkBAKSk/M9nBACQivKfjxEAQArKf35GAABNU/7LMQIAaJLyX54RAEBT
        lP96Mp717YgRANAZ5b8+IwCATSn/7RgBAGxC+W/PCABgVcq/HUYAAKtQ/u0xAgBYlPJvlxEAwCKUf/uM
        AABmpfzzMAIAmIXyz8cIAOAsyj8vIwCAkyj//IwAAI6i/PthBAAwifLvjxEAwEHKv19GAABVyr9/RgAA
        lyj/cWT8Wj8b+ekIADNS/uMxAgAG98aI8h+TEQAwqFL+T0ZqL7StRvnPywgAGIzyZ8cIABiE8ucqIwCg
        c8qf6xgBAJ1S/tzECADojPJnKiMAoBPKn2MZAQDJKX9OZQQAJKX8OZcRAJCM8mcuWUfAz0QAhqL8mZsR
        ANA45c9SjACARil/llZGQLbvMSMA6JryZy0Zv9eMAKBLyp+1GQEAG1P+bMUIANiI8mdrRgDAypQ/rTAC
        AFai/GmNEQCwMOVPq4wAgIUof1pnBADMTPmThREAMBPlTzZGAMCZlD9ZGQEAJ1L+ZGcEABxJ+dMLIwBg
        IuVPb4wAgBsof3plBABcQ/nTOyMA4IqHIsqfEWQdAY9FAGal/BmNEQAMT/kzKiMAGJbyZ3RGADAc5Q93
        GAHAMJQ/XGYEAN1T/lBnBADdUv5wmBEAdEf5wzRGANAN5Q/HMQKA9JQ/nMYIANJS/nAeIwBIR/nDPIwA
        IA3lD/MyAoDmPRh5PFJ7QWg1yp8MMg5rIwAGofxhWUYA0BzlD+swAoBmKH9YlxEAbE75wzaMAGAzyh+2
        ZQQAq1P+0AYjAFiN8oe2GAHA4pQ/tMkIABaj/KFtRgAwO+UPORgBwGyUP+RiBABnU/6QkxEAnEz5Q24Z
        f4aNANiY8oc+GAHAZA9ElD/0I+sIeGsEWInyhz5lHAHPRYwAWIHyh74ZAcBdlD+MwQgAvkP5w1iMAED5
        w6CMABiY8oexGQEwIOUPFEYADET5A/uMABiA8gdqjADomPIHDjECoEPKH5jCCICOKH/gGEYAdED5A6cw
        AiAx5Q+cI+NriBHA8JQ/MAcjABJR/sCcjABIQPkDSzACoGHKH1iSEQANUv7AGowAaIjyB9ZkBEADyg/i
        5yO1b/hWo/whPyMANqT8gS0ZAbAB5Q+0wAiAFSl/oCVGAKxA+QMtMgJgQcofaJkRAAtQ/kAGRgDMSPkD
        mRgBMAPlD2RkBMAZlD+QWdYR8LYIbEb5Az0wAuAIyh/oiREAEyh/oEcZX9uMAFaj/IGeGQFQofyBERgB
        sEf5AyMxAiAof2BERgBDU/7AyIwAhqT8AYwABvO6iPIHuMMIYAjKH+BuRgBdU/4A1zMC6JLyB7iZEUBX
        lD/AdEYAXVD+AMczAkhN+QOczgggJeUPcD4jgFSUP8B8jABSUP4A8zMCaJryB1iOEUCTlD/A8owAmqL8
        AdZjBNAE5Q+wPiOATSl/gO1kfA02Ajqg/AG2ZwSwKuUP0A4jgFUof4D2GAEsSvkDtMsIYBHKH6B9WUfA
        2yM0qHxDfS5S+8K1GuUPjMoIYBbKHyAfI4CzKH+AvIwATqL8AfIzAjiK8gfohxHAJMofoD9GAAcpf4B+
        GQFUKX+A/hkBXKL8AcZhBPA85Q8wHiNgcMofYFxGwKCUPwBGwGCUPwA7GTvBCDiB8gfgKiOgc+UL/Hik
        dpCt5pnIoxEAlvX6yBcitdfiVlNGwGMRDrgv8plI7QBbjfIHWFfGEXA78nCEihdH/j5SO7hW47I/wDYy
        3g4ob3C/P8IV74nUDqzVeOcPsK0HI9muBPxhhD3l0n+5R1I7rBaj/AHakG0EfDtyK8KF90VqB9VilD9A
        W8oIyPTw+EcjhO+KZFlv7vkDtCnTMwHfirwiMry3RGoH1Fq88wdoW6YrAb8YGd5vRGqH01KUP0AOWUbA
        n0WG95eR2uG0Epf9AXLJcDvg3yLD+5dI7XBaiPIHyKn1EVCefRvef0dqh7N1XPYHyK3l2wHlQcAXRYbW
        4gDwzh+gD61eCfhmpPwW3ND+OVI7nK2i/AH60uII+GxkeH8RqR3OFlH+AH1qbQT8a2R4vx6pHc7acc8f
        oG8tPRPwx5HhvTlSO5w1o/wBxtDKCHhXZHhbfxSwy/4AY9n6dsDXI/4s8IXfidQOaekof4AxbTkC/ijC
        hVdFno3UDmqpuOwPMLYtbgd8I/JAhD2/Eqkd1hJR/gAUpYzXHAEfjHDFiyN/F6kd2Jxx2R+AffdH1rgd
        8KnIyyNUlFsBn47UDm6OeOcPQM3SVwKeiLwmwgFliX0mUjvAc/LFyK0IANSUBwOX6p9HIkxwX+QfIrWD
        PCXlzy6+OgIAh8zdP5+M6J8jlWcC3hN5LlI71Ckpv2v5m5GXRQBgipdEfi1ybv+8N6J/zlDWWHlq8ulI
        7ZBr+Urk9yM/GAGAU/xApPRPeX6s1jW1fDWif2Z2b+QdkQ9F/jpS/oxw+aLcjpS/qvS3kd+N/HzkuyMA
        MIfSPz8bKf3zsch/RMp9/Scj5cn+j0dK/7wzon8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADoyD33/D+lh5+7pev/FQAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        pVGwql3axD7apU2wql4aBavapU3so13aBKvqpVGwql3axD7apU2wql4aBavapU3so13aBKvqpVGwql3a
        xD7apU2wql4aBavapU3so13aBKvqpVGw6jlD2rF3GOkxAavqpVGw6oVD2rEXjfSYgFX10ihY9W5D2rF3
        H+kxAavqpVGw6iVD2rEPHOkxAavqpVGw6pOGtGMvH+kxAavqpVGw6vOHtGNfNNJjAlbVS6Ng1T8Z0o59
        10iPCVhVL42CVa8ezxzSTj1rPDHSYwJW1Uuj4C7eZ0g79f4jPRbgLuqlUXAXf31IO/U5Iz0W4C7qpVFw
        Fz84pJ360ZEeC3AX9dIouCu/BtAuvddIjwG4q3ppFNzVlw5ph75spMcA3FW9NAru6pfHC4Z0yx3ffXHc
        19NjAO6qXhoFj+PzhnTLfeFI9314HPXSKHgcPz/edUi32O8ZvzjSfR8eR700Ch7XNwzpFvvGke7z8Ljq
        pVHwuN44PmRIt9SHjeO+ne7z8LjqpVHwdPzUeP6QbqF3Hj890n0dno56aRQ8Xd8xpFvoO0e6j8PTVS+N
        gvvw2UO65v7WSPdtuA/10ii4D8fvTD9tSNfYJ483jHTfhvtQL42C+/Ib488M6Zr66HHcd9N9Gu5LvTQK
        7tNvjk8f0jX08uHFn4dQL42C+3b8OuBvDulSe+Y4fufv4348lHppFJzlu4fvDNCl9bzxbSPdZ+Es9dIo
        ONPxmeoPHdIldPyTn58Z6b4KZ6qXRsHZjrdZj3+t+ruH1Oj4Zr+vGd7yp6VeGgUP5RfGF4zjyVh6iN5l
        HN/q54t9aKuXRsFDe+34svHeQzqj9xlfPo77WroPwkOrl0ZB04+M4xMDLx7PGtLjdNx3/uj4nPGjI93X
        oKleGgWX4olx/C/2LxrHf2Z76XiPcfzK4DlDe3fcB477wnGfOO4bLxvHfeW7xnHfSfcpuBT10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz1
        0igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10igA4Fz10iiu3y+OV45/ND53fPz4Y+N9
        x3uMF4znDEm9jsfg8Vg8HpPHY/N4jB6P1eMxezx2j8fw8VhOj3GuX700iuvz2vFvxt8eLxnPGpJuo+OA
        8Fnj28fPj/QcwPWpl0ZxHX5hfM340PHsIen2Ox7rHza+dhzPAem5getQL43icr1hfM/4C+Mdh6R9O54D
        jueCfzGO54b0nMHlqpdGcXmOB/c/Hx8wJOmte+/xjeM3R3oO4fLUS6O4HMeD+evGew5JelR/aHz9cBC4
        fPXSKC7DD46XDkm6ay8e3zfScwuXoV4aRddrxl8d/pJf0tPpmeNTx6tHeq6hq14aRc93jxcOSbqv3mX8
        05Gec+ipl0bx8I7f1x2f4T9O7JJ03x3PLcc7i68b6TmIh1cvjeJh/cz4wCFJZ/dB47+P9FzEw6qXRvFw
        jj/0e9chSQ/V8WvGV4z0nMTDqZdG8TD+3XjukKSH7p3GvxrpuYmHUS+N4nzfOd5hSFKr48uI/vFIz1Gc
        r14axbmOB5yP+Em6hI7nom8Z6bmKc9VLozjPvx1+8pd0Sb39+NcjPWdxnnppFOc4vtv7dw1JurR+5/CH
        gQ+rXhrF/Ts+6veiIUmX2vGJJB8RfDj10iju12+MDx6SdOkd/5PEPwt6GPXSKO7X8d+3JOla+uyRnsu4
        X/XSKO7P8R3+/r2vpGvqeM46vpckPadxf+qlUdyPnxu+2EfSNXZ8gdATIz23cT/qpVHcj780JOla+8yR
        ntu4H/XSKJ6+7xve+pd0zR3/JMhHA89TL43i6Tm+2vfFQ5Kuvfcdx3Naeq7j6amXRvH0fO2QpFvpG0Z6
        ruPpqZdG8fheP/7wkKRb6T2HdwHuX700isf3TUOSbi3fGnj/6qVRPJ43jvcZknRrvdd4w0jPfTyeemkU
        j+d7hiTdav9ypOc+Hk+9NIrH8/FDkm61TxzpuY/HUy+N4u5+cfyOIUm32juOXxjpOZC7q5dGcXdfPS65
        541PGl83XjmOf1N8fEthuizAwzgeg8dj8XhMHh8fPn7Cfu645L5+pMvC3dVLo7i7Dx2X2B8Zx2d4f2Wk
        3cBlOR6rx4vspX6c+MNH2s3d1UujuJvj7f9nj0vq+HXE3x0+uwvX6Xh34O+M4233S+rtxi+NtJm7qZdG
        cTf/bFxSx08OrxppK3Bdvn/8vnFJHZ94Slu5m3ppFHfz18al9P7j+J1i2glcp/8x3m9cSn9jpJ3cTb00
        iru5lAfm8ZO/F3+4Tcch4PeOS+j4QSNt5G7qpVGsO37/fwlf+3v8nvDHRtoI3IYfGpfwcePja4J/eaSN
        rKuXRrHuB8YldPzBX9oH3JYvGJfQcRhJ+1hXL41i3TeOdsdH/fy1P+zhteMSfhXwzSPtY129NIp1nzva
        +a5u2MvfG+0+b6RtrKuXRrHuz49mx3/4809+YC//e7T/Y+AnjLSNdfXSKNZ98Gh2/HvftAu4bccLcLMP
        GWkX6+qlUax779Hs+N/+aRdw275mNDs+/px2sa5eGsW6dxvNji8RSbuA23b8h8Bm7z7SLtbVS6NY98LR
        7ImRdgG37dWj2YtG2sW6emkU654zmr1upF3Abfv10ewdRtrFunppFOvapU3AHtqlTayrl0axrl3aBOyh
        XdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunpp
        FOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3A
        HtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayr
        l0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3a
        BOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrE
        unppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOva
        pU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtql
        Tayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0ax
        rl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyh
        XdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunpp
        FOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3A
        HtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayr
        l0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3a
        BOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrE
        unppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOva
        pU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtql
        Tayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0ax
        rl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyh
        XdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunpp
        FOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3A
        HtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayrl0axrl3aBOyhXdrEunppFOvapU3AHtqlTayr
        l0axrl3aBOyhXdrEunqvG2kYa9qlTcAe2qVNrPn1Ue81I41jTbu0CdhDu7SJNU+Mej870jjWtEubgD20
        S5tY8zOj3k+MNI417dImYA/t0ibW/Pio94qRxrGmXdoE7KFd2sSa7xv1vmOkcaxplzYBe2iXNrHmW0e9
        Lx5pHGvapU3AHtqlTaz5glHvU0Yax5p2aROwh3ZpE2s+edT7oJHGsaZd2gTsoV3axJqXjHrPG28caSCP
        1i5tAvbQLm3i0d4wnjsuouPjCGkkj9YubQL20C5t4tF+ZFxMXzHSSB6tXdoE7KFd2sSjfem4mD52pJE8
        Wru0CdhDu7SJR/sz42J6/nj9SEN5au3SJmAP7dImntpvjuNv7y6q/zjSWJ5au7QJ2EO7tImn9u/HxfVZ
        I43lqbVLm4A9tEubeGqfPi6u49cAvzrSYJ5cu7QJ2EO7tIkn92vjncdF9m0jjebJtUubgD20S5t4ct8y
        LrbjLxPTaJ5cu7QJ2EO7tIkn95HjYnvmeNVIw8napU3AHtqlTWT/ZTxrXHQvG2k8Wbu0CdhDu7SJ7BPH
        xffs8ZMjXQDeVru0CdhDu7SJt/XfxvHaehV9xkgXgrfVLm0C9tAubeJtfdq4mo6Tyo+OdEF4S+3SJmAP
        7dIm3tIPj6v56f+3+qBxfGVhukC8Wbu0CdhDu7SJNzteQz94XGXfMNKF4s3apU3AHtqlTbzZ146r7UXj
        f410wXiTdmkTsId2aRNv8sR4l3HVfdR440gXkH5pE7CHdmkTb3rN/LPjJvrykS4k/dImYA/t0iae8Ywv
        HTfT249XjHRBd9cubQL20C5t2t0PjOeMm+oPjp8b6QLvrF3aBOyhXdq0s1ePPzBuspeOXx7pgu+qXdoE
        7KFd2rSr47XxA8ZN9xHj10e6AnbULm0C9tAubdrR68afGlt0fKmBfxL0Ju3SJmAP7dKm3RyvhZ8wturj
        xq+NdIXspF3aBOyhXdq0k+Mn/6v4lr8zOn4d8EsjXTG7aJc2AXtolzbt4rXjT4+te8k4/vIxXUE7aJc2
        AXtolzbt4H+O47VP0+8f/2mkK+rWtUubgD20S5tu3SvHuw/9tt5ufP7Y7Y8D26VNwB7apU236vj3vl81
        bu6f/NxnHzt2+gKhdmkTsId2adMtOr7Y52OGFnrBOE5KO7wb0C5tAvbQLm26JcdP/d843nXojh1/JHH8
        viRdsbeiXdoE7KFd2nQrfnT88aGn0bPHp4+fHOlKvnbt0iZgD+3Spmv3X8enjeO1S/fUs8bxO5QfHulK
        v1bt0iZgD+3Spmv1qvGp4/iDdp3UM8dHjm8dvzrSDXFN2qVNwB7apU3X5HgN+pZxvCYdr016wJ4/PmP8
        h/GbI91Al65d2gTsoV3adOmO15rjNef41fTxGqQL6J3GnxxfMn5oXMsnCNqlTcAe2qVNl+inx9eMjx/v
        PHThPXe8dHzy+MLxbeP4b4M/Po4b8zXj+CKGdGM/pHZpE7CHdmnTQzpeA47XguM14XhtOF4jjl8vH68Z
        x2vH8Um047VEkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRJkiRt0TOe
        8X8B4orurmR/KKAAAAAASUVORK5CYII=
</value>
  </data>
=======
ï»¿<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
>>>>>>> df4928812b77c8d08c642e5821e346c387662ae5
</root>